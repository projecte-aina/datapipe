name: datapipe
namespace: assistent

# The build section defines how to build the images of your development environment
# More info: https://www.okteto.com/docs/reference/manifest/#build
build:

  # You can use the following env vars to refer to this image in your deploy commands:
  #  - OKTETO_BUILD_DATAPIPE_REGISTRY: image registry
  #  - OKTETO_BUILD_DATAPIPE_REPOSITORY: image repo
  #  - OKTETO_BUILD_DATAPIPE_IMAGE: image name
  #  - OKTETO_BUILD_DATAPIPE_TAG: image tag
  datapipe:
    context: .
    dockerfile: Dockerfile
    image: paulandrei/datapipe:0.7.8

# The deploy section defines how to deploy your development environment
# More info: https://www.okteto.com/docs/reference/manifest/#deploy
#deploy:
#  - make deploy

# The dependencies section defines other git repositories to be deployed as part of your development environment
# More info: https://www.okteto.com/docs/reference/manifest/#dependencies
# dependencies:
#   - https://github.com/okteto/sample


# The dev section defines how to activate a development container
# More info: https://www.okteto.com/docs/reference/manifest/#dev
dev:
  converter:
    image: ${OKTETO_BUILD_DATAPIPE_IMAGE}
    command: nodemon --exec "python -m" converter -e py -V
    workdir: /app
    sync:
      - ./converter:/app/converter
    externalVolumes:
      - datapipe-storage-local:/datapipe
  fetcher:
    image: ${OKTETO_BUILD_DATAPIPE_IMAGE}
    command: nodemon --exec "python -m" fetcher -e py -V
    workdir: /app
    sync:
      - ./fetcher:/app/fetcher
    externalVolumes:
      - datapipe-storage-local:/datapipe
  gender:
    image: ${OKTETO_BUILD_DATAPIPE_IMAGE}
    command: nodemon --exec "python -m" gender -e py -V
    workdir: /app
    sync:
      - ./gender:/app/gender
    externalVolumes:
      - datapipe-storage-local:/datapipe
  preprocessor:
    image: ${OKTETO_BUILD_DATAPIPE_IMAGE}
    command: nodemon --exec "python -m" preprocessor -e py -V
    workdir: /app
    sync:
      - ./preprocessor:/app/preprocessor
    externalVolumes:
      - datapipe-storage-local:/datapipe
  splitter:
    image: ${OKTETO_BUILD_DATAPIPE_IMAGE}
    command: nodemon --exec "python -m" splitter -e py -V
    workdir: /app
    sync:
      - ./splitter:/app/splitter
    externalVolumes:
      - datapipe-storage-local:/datapipe
#  vosk_vad_transcriber:
#    image: ${OKTETO_BUILD_DATAPIPE_IMAGE}
#    command: nodemon --exec "python -m" vosk_vad_transcriber -e py -V
#    workdir: /app
#    sync:
#      - ./vosk_vad_transcriber:/app/vosk_vad_transcriber
#    externalVolumes:
#      - datapipe-storage-local:/datapipe
#  wav2vec2_transcriber:
#    image: ${OKTETO_BUILD_DATAPIPE_IMAGE}
#    command: nodemon --exec "python -m" wav2vec2_transcriber -e py -V
#    workdir: /app
#    sync:
#      - ./wav2vec2_transcriber:/app/wav2vec2_transcriber
#    externalVolumes:
#      - datapipe-storage-local:/datapipe
